{"version":3,"sources":["api/userApi.js","components/Spinner.js","components/TitleDescription.js","components/UserListItem.js","components/UserList.js","components/UserFilter.js","components/UserDetail.js","containers/MainScreen.js","components/TopBar.js","App.js","serviceWorker.js","index.js"],"names":["sleep","milliseconds","Promise","resolve","setTimeout","mapUser","obtainedUser","fullName","name","first","last","fullNameUpperCase","toUpperCase","fullAddress","location","street","number","state","country","allPhones","phone","cell","getListAsync","quantity","a","fetch","then","res","json","data","results","map","user","response","Spinner","props","visible","CircularProgress","size","TitleDescription","title","description","Fragment","Typography","component","variant","style","display","color","UserListItem","onUserSelected","ListItem","alignItems","ListItemAvatar","Avatar","width","height","alt","src","picture","medium","ListItemText","primary","secondary","ListItemSecondaryAction","IconButton","edge","aria-label","onClick","fontSize","UserList","userList","List","undefined","key","id","value","Divider","UserFilter","onTextChange","text","margin","TextField","autoFocus","label","InputProps","startAdornment","InputAdornment","position","onChange","e","target","UserDetail","onBackPress","Card","minWidth","maxWidth","CardHeader","avatar","backgroundColor","subheader","date","Date","dob","console","log","large","toLocaleDateString","getFormatedDateOfBirthday","CardMedia","paddingTop","objectFit","image","CardContent","textAlign","lineHeight","email","age","city","CardActions","disableSpacing","MainScreen","mustShowFullList","filteredUserList","length","filterText","mustShowDetail","selectedUser","mustShowFilter","isLoadingUsers","hasError","initializeUserList","getUserListAsync","setState","manageException","filterUserList","completeList","fullNameFilter","fullNameFilterUpper","filter","includes","filterListByFullName","ex","exception","error","this","Component","TopBar","AppBar","App","className","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"mUAEMA,EAAQ,SAACC,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAGhDI,EAAU,SAACC,GACb,IAAMC,EAAQ,UAAMD,EAAaE,KAAKC,MAAxB,YAAiCH,EAAaE,KAAKE,MACjE,OAAO,aACHH,WACAI,kBAAmBJ,EAASK,cAC5BC,YAAY,GAAD,OAAKP,EAAaQ,SAASC,OAAOP,KAAlC,YAA0CF,EAAaQ,SAASC,OAAOC,OAAvE,aAAkFV,EAAaQ,SAASG,MAAxG,aAAkHX,EAAaQ,SAASI,SACnJC,UAAU,GAAD,OAAKb,EAAac,MAAlB,cAA6Bd,EAAae,OAChDf,IAILgB,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEAEXxB,EAnBiB,KAiBN,uBAIIyB,MAAM,sCAAD,OAAuCF,EAAvC,sBACrBG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,QAChBC,KAAI,SAAAC,GAAI,OAAI3B,EAAQ2B,SAPZ,cAIbC,EAJa,yBAUVA,GAVU,2CAAH,sD,SCPHC,EAPC,SAACC,GAEb,OADoBA,EAAZC,SAEO,kBAACC,EAAA,EAAD,CAAkBC,KAAM,M,iGCY5BC,EAfU,SAACJ,GAAW,IAC1BK,EAAsBL,EAAtBK,MAAOC,EAAeN,EAAfM,YACd,OACI,kBAAC,IAAMC,SAAP,KACI,kBAACC,EAAA,EAAD,CAAYC,UAAU,OAAOC,QAAQ,QAAQC,MAAO,CAAEC,QAAS,UAAYC,MAAM,eAC5ER,EADL,SAGA,kBAACG,EAAA,EAAD,CAAYC,UAAU,OAAOC,QAAQ,QAAQC,MAAO,CAAEC,QAAS,UAAYC,MAAM,iBAC5EP,GAEL,+BC2BGQ,EA9BM,SAACd,GAAW,IACrBH,EAAyBG,EAAzBH,KAAMkB,EAAmBf,EAAnBe,eACd,OACI,kBAACC,EAAA,EAAD,CAAUC,WAAW,cACjB,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQR,MAAO,CAAES,MAAO,GAAIC,OAAQ,IAAMC,IAAKzB,EAAKxB,KAAKC,MAAOiD,IAAK1B,EAAK2B,QAAQC,UAEtF,kBAACC,EAAA,EAAD,CACIC,QAAS9B,EAAKzB,SACdwD,UACI,kBAAC,IAAMrB,SAAP,KACI,kBAAC,EAAD,CAAkBF,MAAM,cAAWC,YAAaT,EAAKb,YACrD,kBAAC,EAAD,CAAkBqB,MAAM,eAAYC,YAAaT,EAAKnB,iBAIlE,kBAACmD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIC,KAAK,MACLC,aAAW,aACXnB,MAAM,UACNoB,QAAS,kBAAMlB,EAAelB,KAE9B,kBAAC,IAAD,CAAwBc,MAAO,CAAEuB,SAAU,UCVhDC,EAlBE,SAACnC,GAAW,IACjBC,EAAsCD,EAAtCC,QAASmC,EAA6BpC,EAA7BoC,SAAUrB,EAAmBf,EAAnBe,eAC3B,OACId,GACA,kBAACoC,EAAA,EAAD,UAEqBC,IAAbF,GACAA,EAASxC,KAAI,SAACC,GAAD,OACT,yBAAK0C,IAAK1C,EAAK2C,GAAGC,OACd,kBAAC,EAAD,CAAc5C,KAAMA,EAAMkB,eAAgBA,IAC1C,kBAAC2B,EAAA,EAAD,CAAShC,QAAQ,QAAQD,UAAU,a,mCCc5CkC,EAxBI,SAAC3C,GAAW,IACnB4C,EAAgC5C,EAAhC4C,aAAc3C,EAAkBD,EAAlBC,QAAS4C,EAAS7C,EAAT6C,KAC/B,OACI5C,GACA,yBAAKU,MAAO,CAAEmC,OAAQ,cAClB,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTP,MAAOI,EACPI,MAAM,qBACNvC,QAAQ,WACRP,KAAK,QACL+C,WAAY,CACRC,eACI,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACrB,kBAAC,IAAD,QAIZC,SAAU,SAACC,GAAD,OAAOX,EAAaW,EAAEC,OAAOf,Y,8DCoCxCgB,EA/CI,SAACzD,GAChB,IAMQC,EAA+BD,EAA/BC,QAASJ,EAAsBG,EAAtBH,KAAM6D,EAAgB1D,EAAhB0D,YAEvB,OACIzD,GACA,kBAAC0D,EAAA,EAAD,CAAMhD,MAAO,CAAEiD,SAAU,IAAKC,SAAU,MACpC,kBAACC,EAAA,EAAD,CACIC,OAAQ,kBAAC5C,EAAA,EAAD,CAAQR,MAAO,CAAEqD,gBAAiB,WAAanE,EAAKxB,KAAKgC,OACjEA,MAAOR,EAAKzB,SACZ6F,UAdsB,SAACpE,GAC/B,IAAMqE,EAAO,IAAIC,KAAKtE,EAAKuE,IAAIF,MAE/B,OADAG,QAAQC,IAAI,UAAWzE,EAAK2B,QAAQ+C,OAC7BL,EAAKM,mBAAmB,SAWZC,CAA0B5E,KAEzC,kBAAC6E,EAAA,EAAD,CACI/D,MAAO,CAAEU,OAAQ,EAAGsD,WAAY,SAAkBC,UAAW,WAC7DC,MAAOhF,EAAK2B,QAAQ+C,MACpBlE,MAAOR,EAAKxB,KAAKC,QAErB,kBAACwG,EAAA,EAAD,CAAanE,MAAO,CAAEoE,UAAW,OAAQC,WAAY,SACjD,kBAAC,EAAD,CAAkB3E,MAAM,QAAQC,YAAaT,EAAKoF,QAClD,kBAAC,EAAD,CAAkB5E,MAAM,uBAAiBC,YAAaT,EAAKX,OAC3D,kBAAC,EAAD,CAAkBmB,MAAM,0BAAoBC,YAAaT,EAAKZ,QAC9D,6BACA,kBAAC,EAAD,CAAkBoB,MAAM,SAASC,YAAaT,EAAKxB,KAAKC,QACxD,kBAAC,EAAD,CAAkB+B,MAAM,WAAWC,YAAaT,EAAKxB,KAAKE,OAC1D,kBAAC,EAAD,CAAkB8B,MAAM,OAAOC,YAAaT,EAAKuE,IAAIc,MACrD,6BACA,kBAAC,EAAD,CAAkB7E,MAAM,OAAOC,YAAaT,EAAKlB,SAASI,UAC1D,kBAAC,EAAD,CAAkBsB,MAAM,SAASC,YAAaT,EAAKlB,SAASwG,QAEhE,kBAACC,EAAA,EAAD,CAAaC,gBAAc,GACvB,kBAACvD,EAAA,EAAD,CACIE,aAAW,mBACXC,QAASyB,EACT7C,MAAM,WAEN,kBAAC,IAAD,CAAkBqB,SAAS,cCwChCoD,E,kDAlFX,WAAYtF,GAAQ,IAAD,8BACf,cAAMA,IAWVuF,iBAAmB,WACf,OAA8C,IAAvC,EAAKzG,MAAM0G,iBAAiBC,QAAiD,IAAjC,EAAK3G,MAAM4G,WAAWD,QAb1D,EAgBnBE,eAAiB,WACb,YAAmCrD,IAA5B,EAAKxD,MAAM8G,cAjBH,EAoBnBC,eAAiB,WACb,OAAQ,EAAK/G,MAAMgH,iBAAmB,EAAKhH,MAAMiH,WAAa,EAAKJ,kBArBpD,EAoDnBK,mBApDmB,sBAoDE,4BAAA3G,EAAA,+EAEQ4G,EAzDV,IAuDE,OAET7D,EAFS,OAGb,EAAK8D,SAAS,CAAE9D,WAAU0D,gBAAgB,IAH7B,gDAKb,EAAKK,gBAAL,MALa,yDApDF,EA6DnBC,eAAiB,SAACV,GACd,IACI,IAAMF,EP3CW,SAACa,EAAcC,GACxC,IAAMC,EAAsBD,EAAe7H,cAC3C,OAAO4H,EAAaG,QAAO,SAAA3G,GAAI,OAAIA,EAAKrB,kBAAkBiI,SAASF,MOyClCG,CAAqB,EAAK5H,MAAMsD,SAAUsD,GACnE,EAAKQ,SAAS,CAAEV,mBAAkBE,eACpC,MAAOiB,GACL,EAAKR,gBAAgBQ,KAlEV,EAsEnBR,gBAAkB,SAACS,GACf,EAAKV,SAAS,CACVJ,gBAAgB,EAChB1D,SAAU,GACVoD,iBAAkB,GAClBE,WAAY,GACZK,UAAU,IAEd1B,QAAQwC,MAAMD,IA5Ed,EAAK9H,MAAQ,CACTgH,gBAAgB,EAChB1D,SAAU,GACVoD,iBAAkB,GAClBE,WAAY,GACZK,UAAU,EACVH,kBAActD,GARH,E,gEAyBfwE,KAAKd,uB,+BAGC,IAAD,SAC8Dc,KAAKhI,MAAhEgH,EADH,EACGA,eAAgB1D,EADnB,EACmBA,SAAUoD,EAD7B,EAC6BA,iBAAkBE,EAD/C,EAC+CA,WACpD,OACI,6BACI,kBAAC,EAAD,CAASzF,QAAS6F,IAClB,kBAAC,EAAD,CACI7F,QAAS6G,KAAKjB,iBACdjD,aAAckE,KAAKV,eACnBvD,KAAM6C,IAEV,kBAAC,EAAD,CACIzF,SAAU6G,KAAKnB,iBACfvD,SAAU0E,KAAKvB,mBAAqBnD,EAAWoD,EAC/CzE,eAAgB,SAAC6E,GAAD,OAAkB,EAAKM,SAAS,CAAEN,oBAEtD,kBAAC,EAAD,CACI3F,QAAS6G,KAAKnB,iBACd9F,KAAMiH,KAAKhI,MAAM8G,aACjBlC,YAAa,kBAAM,EAAKwC,SAAS,CAAEN,kBAActD,Y,GA/C5CyE,a,SCIVC,EAVA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQ5D,SAAS,UACb,6BACI,qECSD6D,MAXf,WACE,OACE,yBAAKC,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,eACb,kBAAC,EAAD,SCEYC,QACW,cAA7BC,OAAO1I,SAAS2I,UAEe,UAA7BD,OAAO1I,SAAS2I,UAEhBD,OAAO1I,SAAS2I,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxI,MAAK,SAAAyI,GACJA,EAAaC,gBAEdC,OAAM,SAAArB,GACLxC,QAAQwC,MAAMA,EAAMsB,c","file":"static/js/main.9cb0dedd.chunk.js","sourcesContent":["const SLEEP_MILLISECONDS = 2000;\n\nconst sleep = (milliseconds) => {\n    return new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nconst mapUser = (obtainedUser) => {\n    const fullName = `${obtainedUser.name.first} ${obtainedUser.name.last}`;\n    return {\n        fullName,\n        fullNameUpperCase: fullName.toUpperCase(),\n        fullAddress: `${obtainedUser.location.street.name} ${obtainedUser.location.street.number}, ${obtainedUser.location.state}, ${obtainedUser.location.country}`,\n        allPhones: `${obtainedUser.phone} / ${obtainedUser.cell}`,\n        ...obtainedUser\n    };\n}\n\nconst getListAsync = async (quantity) => {\n    //To always emulate \"long time\" processing\n    await sleep(SLEEP_MILLISECONDS);\n\n    let response = await fetch(`https://randomuser.me/api/?results=${quantity}&nat=es&exc=login`)\n        .then(res => res.json())\n        .then((data) => data.results\n            .map(user => mapUser(user))\n        );\n\n    return response;\n};\n\nconst filterListByFullName = (completeList, fullNameFilter) => {\n    const fullNameFilterUpper = fullNameFilter.toUpperCase();\n    return completeList.filter(user => user.fullNameUpperCase.includes(fullNameFilterUpper));\n}\n\nexport {\n    getListAsync,\n    filterListByFullName,\n}","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst Spinner = (props) => {\n    const { visible } = props;\n    return (\n        visible && <CircularProgress size={50} />\n    );\n}\n\nexport default Spinner;","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst TitleDescription = (props) => {\n    const {title, description} = props;\n    return (\n        <React.Fragment>\n            <Typography component=\"span\" variant=\"body2\" style={{ display: 'inline' }} color=\"textPrimary\">\n                {title}:&nbsp;\n            </Typography>\n            <Typography component=\"span\" variant=\"body2\" style={{ display: 'inline' }} color=\"textSecondary\">\n                {description}\n            </Typography>\n            <br></br>\n        </React.Fragment>\n    );\n}\n\nexport default TitleDescription;","import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport ContactMailTwoToneIcon from '@material-ui/icons/ContactMailTwoTone';\nimport TitleDescription from '../components/TitleDescription';\n\nconst UserListItem = (props) => {\n    const { user, onUserSelected } = props;\n    return (\n        <ListItem alignItems=\"flex-start\">\n            <ListItemAvatar>\n                <Avatar style={{ width: 50, height: 50 }} alt={user.name.first} src={user.picture.medium} />\n            </ListItemAvatar>\n            <ListItemText\n                primary={user.fullName}\n                secondary={\n                    <React.Fragment>\n                        <TitleDescription title=\"Teléfono\" description={user.allPhones} />                        \n                        <TitleDescription title=\"Dirección\" description={user.fullAddress} />\n                    </React.Fragment>\n                }\n            />\n            <ListItemSecondaryAction>\n                <IconButton\n                    edge=\"end\"\n                    aria-label=\"Ver más\"\n                    color=\"primary\"\n                    onClick={() => onUserSelected(user)}\n                >\n                    <ContactMailTwoToneIcon style={{ fontSize: 30 }} />\n                </IconButton>\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}\n\nexport default UserListItem;","import React from 'react';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport UserListItem from '../components/UserListItem';\n\nconst UserList = (props) => {\n    const { visible, userList, onUserSelected } = props;\n    return (\n        visible &&\n        <List>\n            {\n                userList !== undefined &&\n                userList.map((user) =>\n                    <div key={user.id.value}>\n                        <UserListItem user={user} onUserSelected={onUserSelected} />\n                        <Divider variant=\"inset\" component=\"li\" />\n                    </div>\n                )\n            }\n        </List>\n    );\n}\n\nexport default UserList;","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nconst UserFilter = (props) => {\n    const { onTextChange, visible, text } = props;\n    return (\n        visible &&\n        <div style={{ margin: \"10 0 10 0\" }}>\n            <TextField\n                autoFocus\n                value={text}\n                label=\"Filtrar por Nombre\"\n                variant=\"outlined\"\n                size=\"small\"\n                InputProps={{\n                    startAdornment: (\n                        <InputAdornment position=\"start\">\n                            <AccountCircle />\n                        </InputAdornment>\n                    )\n                }}\n                onChange={(e) => onTextChange(e.target.value)}\n            />\n        </div>\n    );\n}\n\nexport default UserFilter;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport TitleDescription from '../components/TitleDescription';\n\nconst UserDetail = (props) => {\n    const getFormatedDateOfBirthday = (user) => {\n        const date = new Date(user.dob.date);\n        console.log('picture', user.picture.large);\n        return date.toLocaleDateString('es-AR');\n    }\n\n    const { visible, user, onBackPress } = props;\n\n    return (\n        visible &&\n        <Card style={{ minWidth: 300, maxWidth: 400 }}>\n            <CardHeader\n                avatar={<Avatar style={{ backgroundColor: 'orange' }}>{user.name.title}</Avatar>}\n                title={user.fullName}\n                subheader={getFormatedDateOfBirthday(user)}\n            />\n            <CardMedia\n                style={{ height: 0, paddingTop: '56.25%'/*16:9*/, objectFit: 'contain' }}\n                image={user.picture.large}\n                title={user.name.first}\n            />\n            <CardContent style={{ textAlign: 'left', lineHeight: \"10px\" }}>\n                <TitleDescription title=\"Email\" description={user.email} />\n                <TitleDescription title=\"Teléfono móvil\" description={user.cell} />\n                <TitleDescription title=\"Teléfono de línea\" description={user.phone} />\n                <br></br>\n                <TitleDescription title=\"Nombre\" description={user.name.first} />\n                <TitleDescription title=\"Apellido\" description={user.name.last} />\n                <TitleDescription title=\"Edad\" description={user.dob.age} />\n                <br></br>\n                <TitleDescription title=\"Pais\" description={user.location.country} />\n                <TitleDescription title=\"Ciudad\" description={user.location.city} />\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton\n                    aria-label=\"add to favorites\"\n                    onClick={onBackPress}\n                    color=\"primary\"\n                >\n                    <ArrowBackIosIcon fontSize=\"large\" />\n                </IconButton>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default UserDetail;","import React, { Component } from 'react';\nimport { getListAsync as getUserListAsync, filterListByFullName } from '../api/userApi';\nimport Spinner from '../components/Spinner';\nimport UserList from '../components/UserList';\nimport UserFilter from '../components/UserFilter';\nimport UserDetail from '../components/UserDetail';\n\nconst USERS_QUANTITY = 20;\n\nclass MainScreen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoadingUsers: true,\n            userList: [],\n            filteredUserList: [],\n            filterText: \"\",\n            hasError: false,\n            selectedUser: undefined\n        }\n    }\n\n    mustShowFullList = () => {\n        return this.state.filteredUserList.length === 0 && this.state.filterText.length === 0;\n    }\n\n    mustShowDetail = () => {\n        return this.state.selectedUser !== undefined;\n    }\n\n    mustShowFilter = () => {\n        return !this.state.isLoadingUsers && !this.state.hasError && !this.mustShowDetail();\n    }\n\n    componentDidMount() {\n        this.initializeUserList();\n    }\n\n    render() {\n        const { isLoadingUsers, userList, filteredUserList, filterText } = this.state;\n        return (\n            <div>\n                <Spinner visible={isLoadingUsers} />\n                <UserFilter\n                    visible={this.mustShowFilter()}\n                    onTextChange={this.filterUserList}\n                    text={filterText}\n                />\n                <UserList\n                    visible={!this.mustShowDetail()}\n                    userList={this.mustShowFullList() ? userList : filteredUserList}\n                    onUserSelected={(selectedUser) => this.setState({ selectedUser })}\n                />\n                <UserDetail\n                    visible={this.mustShowDetail()}\n                    user={this.state.selectedUser}\n                    onBackPress={() => this.setState({ selectedUser: undefined })}\n                />\n            </div>\n        );\n    }\n\n    initializeUserList = async () => {\n        try {\n            var userList = await getUserListAsync(USERS_QUANTITY);\n            this.setState({ userList, isLoadingUsers: false });\n        } catch (ex) {\n            this.manageException(ex);\n        }\n    }\n\n    filterUserList = (filterText) => {\n        try {\n            const filteredUserList = filterListByFullName(this.state.userList, filterText);\n            this.setState({ filteredUserList, filterText });\n        } catch (ex) {\n            this.manageException(ex);\n        }\n    }\n\n    manageException = (exception) => {\n        this.setState({\n            isLoadingUsers: false,\n            userList: [],\n            filteredUserList: [],\n            filterText: '',\n            hasError: true\n        });\n        console.error(exception);\n    }\n}\n\nexport default MainScreen;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\n\nconst TopBar = () => {\n    return (\n        <AppBar position=\"static\">\n            <div>\n                <h3>Búsqueda de Usuarios Aleatorios</h3>\n            </div>\n        </AppBar>\n    );\n}\n\nexport default TopBar;","import React from 'react';\nimport './styles/App.css';\nimport MainScreen from './containers/MainScreen';\nimport TopBar from './components/TopBar';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <div className=\"App-content\">\n        <MainScreen />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}